from typing import overload, List
import numpy as np

NumberType = (int, float, np.number)

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# <litgen_stub>  // Autogenerated code below! Do not edit!
####################    <generated_from:Example01.h>    ####################


#//////////////////////////////////////////////////////////////////
# Basic functions bindings
#//////////////////////////////////////////////////////////////////
# (Note: this comment will also be published in the python stubs,
# as a documentation for the users)

@overload
def add(a: int, b: int) -> int:
    """ Simple add function (this will be the docstring)"""
    pass

@overload
def add(a: int, b: int, c: int) -> int:
    """ And this is a separate docstring, for this overload"""
    pass

def sub(a: int, b: int) -> int:
    """This is also a docstring,
     on multiple lines
    """
    pass

#//////////////////////////////////////////////////////////////////
# Classes and structs bindings
#////////////////////////////////////////////////////////////////

class Point:
    """ A default constructor with named parameters will
     be automatically generated in python for structs
    """
    x: int = 0
    y: int = 0
    def __init__(self, x: int = 0, y: int = 0) -> None:
        """Auto-generated default constructor with named params"""
        pass

class Widget:
    """ A class will publish only its public methods and members"""
    def __init__(self) -> None:
        pass
    def get_value(self) -> int:
        pass
    def set_value(self, v: int) -> None:
        pass


####################    </generated_from:Example01.h>    ####################

# </litgen_stub> // Autogenerated code end
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

